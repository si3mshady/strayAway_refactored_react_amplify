{"version":3,"sources":["images/tld.png","components/Mainframe.js","App.js","index.js","components/ButtonContainer.js","components/MiniDisplay.js"],"names":["Mainframe","imgRef","React","useRef","className","ref","src","tld","id","alt","ButtonContainer","App","ReactDOM","render","StrictMode","document","getElementById","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","initialLocationState","latitude","longitude","speed","timestamp","fileInput","useState","gps","setGPS","labels","setLabels","clicked","setButtonClicked","gpsHistory","updateGPSHistory","s3Bucket","rekognition","Rekognition","handleGeoLocation","event","coords","accuracy","Date","toISOString","useEffect","navigator","geolocation","getCurrentPosition","Axios","post","then","response","console","log","catch","error","sendToS3","data","file","reader","FileReader","onloadend","result","bucket","S3","params","Bucket","buf","Buffer","from","replace","bufferedBase64Data","Image","Bytes","detectLabels","err","narrowList","Labels","slice","analyze_image","Key","name","Body","ContentEncoding","ContentType","putObject","readAsDataURL","onClick","$","click","prev","class","action","encType","hidden","on","newImageFile","target","files","current","window","URL","createObjectURL","type","accept","capture","MiniDisplay","map","location","index","label","Name","Confidence"],"mappings":"gPAAe,MAA0B,gC,OCI1B,SAASA,IAEpB,IAAMC,EAASC,IAAMC,SACrB,OACI,sBAAKC,UAAU,YAAf,UAEI,qBAAKA,UAAU,wBAAf,SAEI,qBAAKA,UAAU,+BAAf,SAGQ,qBAAKA,UAAU,gBAAgBC,IAAKJ,EAAQK,IAAKC,EAAKC,GAAG,MAAMC,IAAI,qBAM/E,cAACC,EAAA,EAAD,CAAiBT,OAAQA,OCRtBU,MATf,WACE,OACE,qBAAKP,UAAU,YAAf,SACM,cAAC,EAAD,OCDVQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,4LCH1BC,IAAIC,OAAOC,OAAS,YACpBF,IAAIC,OAAOE,YAAc,IAAIH,IAAII,2BAA2B,CACxDC,eAAgB,mDAKpB,IAAMC,EAAuB,CACzBC,SAAU,KACVC,UAAW,KACXC,MAAM,KACNC,UAAW,MAKA,SAASjB,EAAT,GAEd,IAFwCT,EAEzC,EAFyCA,OAG/B2B,EAAYzB,mBADtB,EAG0BD,IAAM2B,SAAS,CAACN,IAH1C,mBAGWO,EAHX,KAGgBC,EAHhB,OAIiC7B,IAAM2B,SAAS,IAJhD,mBAIWG,EAJX,KAImBC,EAJnB,OAKyC/B,IAAM2B,UAAS,GALxD,mBAKWK,EALX,KAKoBC,EALpB,OAM4CjC,IAAM2B,SAAN,YAAmBC,IAN/D,mBAMWM,EANX,KAMuBC,EANvB,OAOuBnC,IAAM2B,SAAS,yBAA3BS,EAPX,oBAUQC,EAAc,IAAItB,IAAIuB,YAGpBC,EAAoB,SAACC,GAEvBX,EAAO,CAAC,CAAEP,SAASkB,EAAMC,OAAOnB,SAAWC,UAAUiB,EAAMC,OAAOlB,UAChEmB,SAASF,EAAMC,OAAOC,SAAUjB,WAAW,IAAIkB,MAAOC,kBAU9D5C,IAAM6C,WAAU,WAAQC,UAAUC,YAAYC,mBAAmBT,KAAoB,CAACP,IACtFhC,IAAM6C,WAAU,WAEdI,IAAMC,KADM,qEACIhB,GACbiB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,yBAEbC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAIf,CAAC5B,EAAKE,IAGT,IAmCI2B,EAAW,SAACC,GAEhB,IAAIC,EAAOD,EAGPE,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjBT,QAAQC,IAAI,SAAUM,EAAOG,QAG7B,IAAMC,EAAS,IAAIjD,IAAIkD,GAAI,CAAEC,OAAQ,CAACC,OAAQ/B,KAGxCgC,EAAOC,EAAOC,KAAKV,EAAOG,OAAOQ,QAAQ,2BAA4B,IAAI,WAhD3D,SAACC,GACtB,IAAMN,EAAS,CAACO,MAAO,CAAEC,MAAOF,IAE/BnC,EAAYsC,aAAaT,GAAQ,SAASU,EAAKlB,GAC7C,GAAIkB,EAAKvB,QAAQC,IAAIsB,OAEb,CACN,IAAMC,EAAanB,EAAKoB,OAAOC,MAAM,EAAE,GACvC1B,QAAQC,IAAII,GACZL,QAAQC,IAAIuB,GACZ9C,EAAU8C,OAuCdG,CAAcZ,GAEd,IAAIV,EAAO,CAETuB,IAAKtB,EAAKuB,KAEVC,KAAMf,EAENgB,gBAAiB,SAEjBC,YAAa,cAKfrB,EAAOsB,UAAU5B,GAAM,SAASkB,EAAKlB,GAE/BkB,GAEFvB,QAAQC,IAAIsB,GAEZvB,QAAQC,IAAI,yBAA0BI,IAItCL,QAAQC,IAAI,uCAOlBM,EAAO2B,cAAc5B,IAMnB,OACI,mCAEA,qBAAKzD,UAAU,mBAAf,SAEI,sBAAKA,UAAU,wBAAf,UACA,qBAAKA,UAAU,6BAAf,SACY,yBAAQsF,QAAS,SAAChD,GAAD,OAAaiD,IAAE,SAASC,QAASzD,GAAkBD,GArHhFG,GAAiB,SAAAwD,GAAI,4BAAUA,GAAV,YAAkB/D,YACvCyB,QAAQC,IAAIpB,IAoHgGhC,UAAU,UAA1G,UAEA,mBAAG0F,MAAM,kBAEL,sBAASC,OAAO,IAAIvF,GAAG,OAAOwF,QAAQ,sBAAtC,SACI,uBAAOC,QAAM,EAAE5F,IAAKuB,EAAW8D,QAhF1C,SAAChD,GACdiD,IAAE,WAAWO,GAAG,UAAU,SAACxD,GACzB,IAAMyD,EAAezD,EAAM0D,OAAOC,MAAM,GACxC1C,EAASwC,GACT5C,QAAQC,IAAI,mBAAoB2C,EAAaf,MAEtB,OAAjBe,IACAlG,EAAOqG,QAAQhG,IAAMiG,OAAOC,IAAIC,gBAAgBN,QA0EhCO,KAAK,OAAOlG,GAAG,SAASmG,OAAO,UAAUC,SAAO,WAIhE,cAAC,IAAD,CACA9E,IAAKA,EACLE,OAAQA,c,wDC7KxB,wDAGe,SAAS6E,EAAT,GAAoC,IAAd/E,EAAa,EAAbA,IAAIE,EAAS,EAATA,OACrC,OACI,qBAAK5B,UAAU,cAAf,SACQ,qBAAKA,UAAU,8BAAf,SAEK,sBAAKA,UAAU,kCAAf,UACA,qBAAKA,UAAU,wCAAf,SAEY0B,EAAIgF,KAAI,SAACC,EAAUC,GAAX,OAGT,qCACI,iDAAqD,OAAvBD,EAAStF,UAAoBsF,EAAStF,UAAW,KAAvEuF,GACR,gDAAqD,OAAtBD,EAASvF,SAAmBuF,EAASvF,SAAU,KAAtEwF,EAAM,GACd,gDAAqD,OAAtBD,EAASnE,SAAmBmE,EAASnE,SAAU,GAA9E,MAAQoE,EAAM,WAK7B,qBAAK5G,UAAU,uCAAf,SAEC4B,EAAO8E,KAAI,SAACG,EAAOD,GAAR,OAGD,mCACI,sCAAmBC,EAAMC,KAAzB,aAAkCD,EAAME,aAAhCH,oB","file":"static/js/main.b887acae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tld.682e269e.png\";","import React from 'react'\nimport '../index.css';\nimport ButtonContainer from '../components/ButtonContainer'\nimport tld from '../images/tld.png'\nexport default function Mainframe() {\n\n    const imgRef = React.useRef()\n    return (\n        <div className='mainframe'> \n\n            <div className=\"mainframe__imageframe\">  \n\n                <div className=\"mainframe__imageframe--image\">\n\n                        \n                        <img className=\"thumbnail-gen\" ref={imgRef} src={tld} id=\"img\" alt=\"camera phone\" /> \n                            \n\n                </div>         \n            \n            </div>            \n            <ButtonContainer imgRef={imgRef} />\n           \n        </div>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport MainFrame from './components/Mainframe'\n\nfunction App() {\n  return (\n    <div className=\"mainFrame\"> \n          <MainFrame/>   \n    \n     </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","import React, {useRef} from 'react'\nimport '../index.css';\nimport $ from 'jquery'\nimport Axios from 'axios'\nimport MiniDisplay from '../components/MiniDisplay'\nimport AWS from 'aws-sdk';\n\nAWS.config.region = 'us-east-1';\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: \"us-east-1:7e4257c7-b198-4dfb-806c-b5b1cff0d337\"\n});\n\n\n\nconst initialLocationState = {\n    latitude: null,\n    longitude: null,\n    speed:null,\n    timestamp: null\n  }\n\n  \n\nexport default function ButtonContainer({imgRef}) \n\n{\n    const fileInput = useRef()\n    \n    const [gps, setGPS] = React.useState([initialLocationState]) // uses an array of dictionaries \n    const [labels, setLabels] =  React.useState([])\n    const [clicked, setButtonClicked ] = React.useState(false)\n    const [gpsHistory, updateGPSHistory] =  React.useState([...gps]) // spread operator only works on iterables        \n    const [s3Bucket] = React.useState(\"deployments-si3mshady\")\n        \n   \n    var rekognition = new AWS.Rekognition()\n    \n\n    const handleGeoLocation = (event) => {\n\n        setGPS([{ latitude:event.coords.latitude,  longitude:event.coords.longitude,\n          accuracy:event.coords.accuracy, timestamp: new Date().toISOString() }])  }\n\n    const trackHistory = () => {\n            updateGPSHistory(prev => ([ ...prev,...gps])) //create new array with new & previous elements\n            console.log(gpsHistory)\n          }\n\n        \n    \n\n  React.useEffect(() => { navigator.geolocation.getCurrentPosition(handleGeoLocation)},[clicked])  // useEffect is triggered ONLY when selected pieces of state are updated \n  React.useEffect(() => {\n    const url = \"https://72zu52q14g.execute-api.us-east-1.amazonaws.com/dev/tracker\"\n    Axios.post(url, gpsHistory)\n      .then(response => {\n        console.log(response)\n        console.log(\"updated gpsHistory\")\n      })\n      .catch(error => {\n        console.log(error)\n        \n      })\n\n  }, [gps, labels])\n\n\n  const analyze_image = (bufferedBase64Data) => {      \n   const params = {Image: { Bytes: bufferedBase64Data }}\n\n    rekognition.detectLabels(params, function(err, data) {\n      if (err) console.log(err); // an error occurred\n      \n      else    {\n        const narrowList = data.Labels.slice(0,3)\n        console.log(data)\n        console.log(narrowList)\n        setLabels(narrowList)      \n      \n      } }\n\n    \n  )\n  }\n\n\n   const getImage =  (event) => {\n        $(\"#camera\").on(\"change\", (event) => {\n          const newImageFile = event.target.files[0]\n          sendToS3(newImageFile)\n          console.log('newImagevariable', newImageFile.name)\n          \n            if (newImageFile !== null) {                           \n                imgRef.current.src = window.URL.createObjectURL(newImageFile) \n                \n                \n                \n          }  } )\n        \n          \n        }\n\nconst sendToS3 = (data) => {    \n    \n  var file = data\n  \n  \n  var reader = new FileReader();\n  reader.onloadend = function() {\n    console.log('RESULT', reader.result)   //Try and send to s3\n    \n    \n    const bucket = new AWS.S3( { params: {Bucket: s3Bucket} } );\n\n\n    const buf =  Buffer.from(reader.result.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64')\n    analyze_image(buf) // \n\n    var data = {\n\n      Key: file.name, \n    \n      Body: buf,\n    \n      ContentEncoding: 'base64',\n    \n      ContentType: 'image/jpeg'\n    \n    };\n\n\n    bucket.putObject(data, function(err, data){\n\n      if (err) { \n  \n        console.log(err);\n  \n        console.log('Error uploading data: ', data); \n  \n      } else {\n  \n        console.log('succesfully uploaded the image!');\n  \n      }\n  \n  });\n\n }\n  reader.readAsDataURL(file);\n    \n\n}\n   \n\n    return (\n        <>\n        \n        <div className=\"containerButtons\"> \n\n            <div className=\"containerButtons__row\">\n            <div className=\"containerButtons__row--col\">\n                        <button onClick={(event) => ( $('input').click(), setButtonClicked(!clicked), trackHistory())}  className=\"theGlow\" >\n                            \n                        <i class=\"fas fa-camera\"></i>\n\n                            <form    action=\"#\" id=\"form\" encType=\"multipart/form-data\">\n                                <input hidden  ref={fileInput} onClick={getImage}\n                                type=\"file\" id=\"camera\" accept=\"image/*\" capture />\n                                </form>                        \n                        </button>\n                </div>   \n                <MiniDisplay \n                gps={gps}\n                labels={labels}\n                 />\n            </div>            \n            \n            \n        </div>\n        \n    </>\n\n    )\n}\n\n//https://stackoverflow.com/questions/52165333/deprecationwarning-buffer-is-deprecated-due-to-security-and-usability-issues/52165509\n//https://reactjs.org/docs/hooks-reference.html#useref\n//https://medium.com/@PhilipAndrews/react-how-to-access-props-in-a-functional-component-6bd4200b9e0b\n//https://aws.amazon.com/blogs/mobile/integrate-the-aws-sdk-for-javascript-into-a-react-app/\n//https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_common-scenarios_federated-users.html\n//https://intellipaat.com/community/15243/uploading-base64-encoded-image-to-amazon-s3-via-node-js\n//https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging","import React from 'react'\nimport '../index.css';\n\nexport default function MiniDisplay({gps,labels}) {\n    return (\n        <div className=\"miniDisplay\">\n                <div className=\"miniDisplay__container card\">\n                    \n                     <div className=\"miniDisplay__container--output \">\n                     <div className=\"miniDisplay__container--output--front\">\n                     \n                                {gps.map((location, index) => \n                            \n                            (\n                                <>\n                                    <p key={index}>{`Longitude: ${location.longitude !== null? location.longitude: \"\"}`}</p>\n                                    <p key={index+1}>{`Latitude: ${location.latitude !== null? location.latitude: \"\"}`}</p>\n                                    <p key={index+2}>{`Accuracy: ${location.accuracy !== null? location.accuracy: \"\"}%`}</p> \n                                        \n                                </> ))}\n                     </div>\n\n                     <div className=\"miniDisplay__container--output--back\">\n                    \n                     {labels.map((label, index) => \n                            \n                            (\n                                <>\n                                    <p key={index}>{`${label.Name}: ${label.Confidence}`}</p>\n                                   \n                                </> ))}\n                     </div>\n                    \n\n                    </div>\n\n                    \n                </div> \n            </div>\n    )\n}\n"],"sourceRoot":""}